{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/takaitech/Takai-Tech/initspo/src/components/Inspirations/Inspiration.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { useState } from 'react';\n;\n;\n\nvar Inspiration = function Inspiration(_ref) {\n  var content = _ref.content,\n      onClick = _ref.onClick,\n      showGrid = _ref.showGrid;\n\n  var _useState = useState(false),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleClick = function handleClick(event) {\n    onClick(event);\n    setSelected(!selected);\n  };\n\n  return __jsx(BoxContainer, {\n    content: content,\n    onClick: function onClick(event) {\n      return handleClick(event);\n    },\n    showGrid: showGrid,\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  });\n};\n\nvar BoxContainer = styled.li.withConfig({\n  displayName: \"Inspiration__BoxContainer\",\n  componentId: \"oyhmy1-0\"\n})([\"width:\", \";height:\", \"px;max-height:\", \";margin:10px;background-image:url(\", \");background-size:cover;list-style:none;background-repeat:no-repeat;float:left;background-position:center;display:\", \"\"], function (props) {\n  return props.selected ? '100%' : props.content.dimensions.width / 4 + 'px';\n}, function (props) {\n  return props.selected ? \"100%\" : props.content.dimensions.height / 4;\n}, function (props) {\n  return props.selected ? \"unset\" : '150px';\n}, function (props) {\n  return props.content.url;\n}, function (props) {\n  return props.showGrid || props.selected ? \"inline-block\" : 'none';\n});\nexport default Inspiration;","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/initspo/src/components/Inspirations/Inspiration.tsx"],"names":["styled","useState","Inspiration","content","onClick","showGrid","selected","setSelected","handleClick","event","BoxContainer","li","props","dimensions","width","height","url"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAcC;AAcA;;AAID,IAAMC,WAA4B,GAAG,SAA/BA,WAA+B,OAAkC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBACrCJ,QAAQ,CAAC,KAAD,CAD6B;AAAA,MAC9DK,QAD8D;AAAA,MACpDC,WADoD;;AAEnE,MAAIC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA4B;AAC1CL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACAF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAEH,GAJD;;AAKI,SACI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEH,OAAvB;AAAgC,IAAA,OAAO,EAAE,iBAACM,KAAD;AAAA,aAA4BD,WAAW,CAACC,KAAD,CAAvC;AAAA,KAAzC;AAAyF,IAAA,QAAQ,EAAEJ,QAAnG;AAA6G,IAAA,QAAQ,EAAEC,QAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGP,CAVD;;AAYA,IAAMI,YAAY,GAAGV,MAAM,CAACW,EAAV;AAAA;AAAA;AAAA,6MACL,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACN,QAAN,GAAiB,MAAjB,GAA0BM,KAAK,CAACT,OAAN,CAAcU,UAAd,CAAyBC,KAAzB,GAAgC,CAAhC,GAAoC,IAAlE;AAAA,CADA,EAGJ,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACN,QAAN,GAAiB,MAAjB,GAA0BM,KAAK,CAACT,OAAN,CAAcU,UAAd,CAAyBE,MAAzB,GAAgC,CAA9D;AAAA,CAHD,EAIA,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACN,QAAN,GAAiB,OAAjB,GAA2B,OAA/B;AAAA,CAJL,EAMU,UAAAM,KAAK;AAAA,SAAGA,KAAK,CAACT,OAAN,CAAca,GAAjB;AAAA,CANf,EAYH,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACP,QAAN,IAAkBO,KAAK,CAACN,QAAxB,GAAmC,cAAnC,GAAoD,MAAxD;AAAA,CAZF,CAAlB;AAkBA,eAAeJ,WAAf","sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\n\ninterface Props {\n    key: number;\n    content: { \n        url: string;\n        dimensions: {\n            width: number;\n            height: number;\n        };\n    };\n\n    onClick: (event: React.MouseEvent) => void;\n    showGrid: boolean;\n};\n\n\ninterface IProps {\n    content: { \n        url: string;\n        dimensions: {\n            width: number;\n            height: number;\n        };\n    };\n    onClick: (event: React.MouseEvent) => void;\n    showGrid: boolean;\n    selected: boolean;\n};\n\n\n\nconst Inspiration: React.FC<Props> = ({content, onClick, showGrid}) => {\n    let [selected, setSelected] = useState(false);\n    let handleClick = (event:React.MouseEvent) => {\n        onClick(event);\n        setSelected(!selected)\n\n    }\n        return (\n            <BoxContainer content={content} onClick={(event:React.MouseEvent) => handleClick(event)} showGrid={showGrid} selected={selected}></BoxContainer>\n        );\n};\n\nconst BoxContainer = styled.li<IProps>`\n    width: ${props => props.selected ? '100%' : props.content.dimensions.width /4 + 'px'};\n    /* max-width: calc(100vw - 301px); */\n    height: ${props => props.selected ? \"100%\" : props.content.dimensions.height/4}px;\n    max-height: ${props => props.selected ? \"unset\" : '150px'};\n    margin: 10px;\n    background-image: url(${props=> props.content.url});\n    background-size: cover;\n    list-style: none;\n    background-repeat: no-repeat;\n    float: left;\n    background-position: center;\n    display: ${props => props.showGrid || props.selected ? \"inline-block\" : 'none'}\n`\n\n\n\n\nexport default Inspiration;"]},"metadata":{},"sourceType":"module"}