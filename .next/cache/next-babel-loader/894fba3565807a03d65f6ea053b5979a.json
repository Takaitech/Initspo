{"ast":null,"code":"var _jsxFileName = \"/Users/takaitech/Takai-Tech/initspo/src/contexts/CollectionsContext.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useReducer } from 'react';\nimport { collectionsReducer } from '../reducers/collectionsReducer';\nconst initState = {\n  collections: [],\n  current: 'all',\n  open: false\n};\nexport const CollectionsContext = createContext({});\n\nconst CollectionsContextProvider = props => {\n  const {\n    0: collections,\n    1: dispatch\n  } = useReducer(collectionsReducer, initState);\n  return __jsx(CollectionsContext.Provider, {\n    value: [collections, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default CollectionsContextProvider;","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/initspo/src/contexts/CollectionsContext.tsx"],"names":["createContext","useReducer","collectionsReducer","initState","collections","current","open","CollectionsContext","CollectionsContextProvider","props","dispatch","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAaA,MAAMC,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,EADC;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,IAAI,EAAE;AAHQ,CAAlB;AAWA,OAAO,MAAMC,kBAAkB,GAAGP,aAAa,CAAC,EAAD,CAAxC;;AAOP,MAAMQ,0BAA2C,GAAIC,KAAD,IAAW;AAC3D,QAAM;AAAA,OAACL,WAAD;AAAA,OAAcM;AAAd,MAA0BT,UAAU,CAACC,kBAAD,EAAqBC,SAArB,CAA1C;AACC,SACG,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE,CAACC,WAAD,EAAcM,QAAd,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACE,QADP,CADH;AAKJ,CAPD;;AAUA,eAAeH,0BAAf","sourcesContent":["import { createContext,useReducer } from 'react'\nimport { collectionsReducer } from '../reducers/collectionsReducer'\n\n\ntype IState = {\n    collections: {\n        collections: Array<{}>;\n        current: string;\n        open: boolean;\n    }\n}\n\n\n\nconst initState = {\n    collections: [],\n    current: 'all',\n    open: false\n}\n\ninterface IReducer {\n    state: IState;\n    dispatch?: ({type}:{type:string}) => void;\n}\n\nexport const CollectionsContext = createContext({})\n\ninterface Props {\n    children: React.ReactNode;\n}\n\n\nconst CollectionsContextProvider: React.FC<Props> = (props) => {\n    const [collections, dispatch] = useReducer(collectionsReducer, initState)\n     return(\n        <CollectionsContext.Provider value={[collections, dispatch]}>\n        {props.children}\n        </CollectionsContext.Provider>\n    )\n}\n\n\nexport default CollectionsContextProvider"]},"metadata":{},"sourceType":"module"}