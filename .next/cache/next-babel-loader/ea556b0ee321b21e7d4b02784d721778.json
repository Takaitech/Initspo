{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/takaitech/Takai-Tech/initspo/src/contexts/CollectionsContext.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useReducer } from 'react';\nimport { collectionsReducer } from '../reducers/collectionsReducer';\nvar initState = {\n  collections: [],\n  current: \"init\",\n  open: false\n};\nexport var CollectionsContext = createContext(initState);\n\nvar CollectionsContextProvider = function CollectionsContextProvider(props) {\n  var _useReducer = useReducer(collectionsReducer, initState),\n      collectionsState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(CollectionsContext.Provider, {\n    value: collectionsContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default CollectionsContextProvider;","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/initspo/src/contexts/CollectionsContext.tsx"],"names":["createContext","useReducer","collectionsReducer","initState","collections","current","open","CollectionsContext","CollectionsContextProvider","props","collectionsState","dispatch","collectionsContext","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAaA,IAAIC,SAAS,GAAG;AACZC,EAAAA,WAAW,EAAE,EADD;AAEZC,EAAAA,OAAO,EAAE,MAFG;AAGZC,EAAAA,IAAI,EAAE;AAHM,CAAhB;AAMA,OAAO,IAAMC,kBAAkB,GAAGP,aAAa,CAAWG,SAAX,CAAxC;;AAOP,IAAMK,0BAA2C,GAAG,SAA9CA,0BAA8C,CAACC,KAAD,EAAW;AAAA,oBACtBR,UAAU,CAACC,kBAAD,EAAqBC,SAArB,CADY;AAAA,MACpDO,gBADoD;AAAA,MAClCC,QADkC;;AAE1D,SACG,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACI,QADP,CADH;AAKJ,CAPD;;AAUA,eAAeL,0BAAf","sourcesContent":["import { createContext,useReducer } from 'react'\nimport { collectionsReducer } from '../reducers/collectionsReducer'\n\ntype collections = {\n    name: string;\n}\n\ntype InitType = {\n    collections: collections[];\n    current: string;\n    open: boolean;\n}\n\n\nlet initState = {\n    collections: [],\n    current: \"init\",\n    open: false,\n}\n\nexport const CollectionsContext = createContext<InitType>(initState)\n\ninterface Props {\n    children: React.ReactNode;\n}\n\n\nconst CollectionsContextProvider: React.FC<Props> = (props) => {\n    const [collectionsState, dispatch] = useReducer(collectionsReducer, initState)\n     return(\n        <CollectionsContext.Provider value={collectionsContext as InitType}>\n        {props.children}\n        </CollectionsContext.Provider>\n    )\n}\n\n\nexport default CollectionsContextProvider"]},"metadata":{},"sourceType":"module"}