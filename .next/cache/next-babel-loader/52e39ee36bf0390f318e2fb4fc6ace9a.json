{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const collectionsReducer = (state, action) => {\n  switch (action.type) {\n    case \"openCollections\":\n      return _objectSpread({}, state, {\n        open: action.boolean\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/initspo/src/reducers/collectionsReducer.tsx"],"names":["collectionsReducer","state","action","type","open","boolean"],"mappings":";;;;;;AAiBA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,KAAD,EAAmBC,MAAnB,KAAsC;AACpE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,+BAAWF,KAAX;AAAkBG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAA/B;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPM","sourcesContent":["import { string } from \"prop-types\";\n\ntype Actions = \n    | {type: 'openCollections', boolean: boolean} \n   \ntype collections = {\n    name: string;\n}\ntype InitType = {\n    collections: collections[];\n    current: string;\n    open: boolean;\n    dispatch: any;\n}\n    \n\n\nexport const collectionsReducer = (state: InitType , action:Actions) => {\n    switch(action.type) {\n        case \"openCollections\":\n            return {...state, open: action.boolean}\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}