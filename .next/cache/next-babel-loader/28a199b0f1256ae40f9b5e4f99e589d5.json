{"ast":null,"code":"var _jsxFileName = \"/Users/takaitech/Takai-Tech/initspo/src/components/nav.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport * as THREE from 'three';\nimport { useEffect, useRef } from 'react';\n\nconst Nav = () => {\n  const mountScene = useRef();\n  useEffect(() => {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(1000, 1000); // document.body.appendChild( renderer.domElement );\n    // use ref as a mount point of the Three.js scene instead of the document.body\n\n    mountScene.current.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x000000\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    renderer.setClearColor(0xffffff); // white background - replace ffffff with any hex color\n\n    camera.position.z = 5;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  });\n  return __jsx(NavContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(CollectionsAction, {\n    ref: mountScene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst NavContainer = styled.div.withConfig({\n  displayName: \"nav__NavContainer\",\n  componentId: \"a1je9d-0\"\n})([\"height:100vh;width:10%;background-color:#f8f8f8;text-align:center;\"]);\nconst CollectionsAction = styled.div.withConfig({\n  displayName: \"nav__CollectionsAction\",\n  componentId: \"a1je9d-1\"\n})([\"position:absolute;top:50%;left:50%;transform:translatey(-50%);> canvas{max-height:100px;max-width:100px;}\"]);\nexport default Nav;","map":{"version":3,"sources":["/Users/takaitech/Takai-Tech/initspo/src/components/nav.tsx"],"names":["styled","THREE","useEffect","useRef","Nav","mountScene","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","alpha","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","setClearColor","position","z","animate","requestAnimationFrame","render","NavContainer","div","CollectionsAction"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;;AAGA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAMC,UAA0B,GAAGF,MAAM,EAAzC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,KAAK,GAAG,IAAIL,KAAK,CAACM,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIP,KAAK,CAACQ,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb;AACA,QAAIC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,aAAV,CAAwB;AAACC,MAAAA,SAAS,EAAE,IAAZ;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAxB,CAAf;AACAH,IAAAA,QAAQ,CAACI,OAAT,CAAkB,IAAlB,EAAwB,IAAxB,EAJY,CAKZ;AACA;;AACAZ,IAAAA,UAAU,CAACa,OAAX,CAAmBC,WAAnB,CAAgCN,QAAQ,CAACO,UAAzC;AACA,QAAIC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAIzB,KAAK,CAAC0B,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAX;AACAjB,IAAAA,KAAK,CAACsB,GAAN,CAAWF,IAAX;AACAb,IAAAA,QAAQ,CAACgB,aAAT,CAAwB,QAAxB,EAZY,CAYwB;;AAEpCrB,IAAAA,MAAM,CAACsB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AACA,QAAIC,OAAO,GAAG,YAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAnB,MAAAA,QAAQ,CAACqB,MAAT,CAAiB5B,KAAjB,EAAwBE,MAAxB;AACD,KAHD;;AAIAwB,IAAAA,OAAO;AAEV,GArBQ,CAAT;AAuBA,SACA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,iBAAD;AAAmB,IAAA,GAAG,EAAE3B,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAIF,CA9BF;;AAgCA,MAAM8B,YAAY,GAAGnC,MAAM,CAACoC,GAAV;AAAA;AAAA;AAAA,0EAAlB;AAOA,MAAMC,iBAAiB,GAAGrC,MAAM,CAACoC,GAAV;AAAA;AAAA;AAAA,iHAAvB;AAaA,eAAehC,GAAf","sourcesContent":["import styled from 'styled-components'\nimport * as THREE from 'three';\nimport {useEffect, useRef} from 'react'\n\n\nconst Nav = () => {\n    const mountScene: {current: any} = useRef();\n\n    useEffect(() => {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n        var renderer = new THREE.WebGLRenderer({antialias: true, alpha: true});\n        renderer.setSize( 1000, 1000 );\n        // document.body.appendChild( renderer.domElement );\n        // use ref as a mount point of the Three.js scene instead of the document.body\n        mountScene.current.appendChild( renderer.domElement );\n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var material = new THREE.MeshBasicMaterial( { color: 0x000000 } );\n        var cube = new THREE.Mesh( geometry, material );\n        scene.add( cube );\n        renderer.setClearColor( 0xffffff ); // white background - replace ffffff with any hex color\n\n        camera.position.z = 5;\n        var animate = function () {\n          requestAnimationFrame( animate );\n          renderer.render( scene, camera );\n        };\n        animate();\n\n    })\n\n    return (\n    <NavContainer >\n        <CollectionsAction ref={mountScene}></CollectionsAction>\n    </NavContainer>\n)}\n\nconst NavContainer = styled.div`\n    height: 100vh;\n    width: 10%;\n    background-color:  #f8f8f8;\n    text-align: center;\n`;\n\nconst CollectionsAction = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translatey(-50%);\n    > canvas {\n        max-height: 100px;\n        max-width: 100px; \n    }\n\n`\n\n\nexport default Nav"]},"metadata":{},"sourceType":"module"}