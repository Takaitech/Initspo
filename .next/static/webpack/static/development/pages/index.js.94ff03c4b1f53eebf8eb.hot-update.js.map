{"version":3,"file":"static/webpack/static/development/pages/index.js.94ff03c4b1f53eebf8eb.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./src/contexts/CollectionsContext.tsx","webpack:///./src/reducers/collectionsReducer.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { createContext,useReducer } from 'react'\nimport collectionsReducer from '../reducers/collectionsReducer'\n\n\n\n\nlet initState = {\n    collections: [],\n    current: \"init\",\n    open: false,\n}\n\nexport const CollectionsContext = createContext()\n\ninterface Props {\n    children: React.ReactNode;\n}\n\n\nconst CollectionsContextProvider: React.FC<Props> = (props) => {\n    const [collections, dispatch] = useReducer(collectionsReducer, initState)\n     return(\n        <CollectionsContext.Provider value={collections}>\n        {props.children}\n        </CollectionsContext.Provider>\n    )\n}\n\n\nexport default CollectionsContextProvider","import { string } from \"prop-types\";\n\ntype Actions = \n    | {type: 'openCollections', boolean: boolean} \n\ninterface initstate {\n    collections: Array<{}>;\n    current: string;\n    open: boolean;\n}\n\nconst collectionsReducer = (state: initstate , action:Actions) => {\n    switch(action.type) {\n        case \"openCollections\":\n            return {...state, open: action.boolean}\n        default:\n            return state;\n    }\n}\n\nexport default collectionsReducer"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;;;;A","sourceRoot":""}